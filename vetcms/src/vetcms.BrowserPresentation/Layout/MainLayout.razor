@inherits LayoutComponentBase
@using vetcms.ClientApplication.Common.IAM.Commands.AuthenticationStatus
@inject IDialogService DialogService;
@inject NavigationManager navigationManager;
@inject MediatR.IMediator Mediator

<FluentLayout>
    <FluentHeader>
        vetcms.BrowserPresentation
    </FluentHeader>
    <FluentStack Class="main" Orientation="Orientation.Horizontal" Width="100%">
        <NavMenu />
        <FluentBodyContent Class="body-content">
            <ErrorBoundary>
                <ChildContent>
                    <div class="content">
                        @Body
                    </div>
                </ChildContent>
                <ErrorContent Context="ex">
                    <div class="blazor-error-boundary">@ex.Message</div>
                </ErrorContent>
            </ErrorBoundary>
        </FluentBodyContent>
    </FluentStack>
    <FluentFooter>
        <a href="https://www.fluentui-blazor.net" target="_blank">Documentation and demos</a>
        <FluentSpacer />
        <a href="https://learn.microsoft.com/en-us/aspnet/core/blazor" target="_blank">About Blazor</a>
    </FluentFooter>
</FluentLayout>

@code {
    protected override async Task OnInitializedAsync()
    {
        await ProcessAuthenticationStatus();
    }


    private async Task ProcessAuthenticationStatus()
    {
        var result = await Mediator.Send(new AuthenticatedStatusQuery(DialogService));
        if (!result.IsAuthenticated)
        {
            navigationManager.NavigateTo("/login");
        }
    }
}

